version: '3'

vars:
  LANG: en
  KEY: service-account.json
  CONF: conf.yaml
  VERBOSE: -v
  MIN_COVERAGE: 60
  GOLANGCI_VERSION: 1.51.2


tasks:
  help:
    cmds:
      - go run . -h

  setlang:
    cmds: # TODO: how should we handle windows?
      - ln -sf ../i18n/"{{.LANG}}"/lang.go internal/
      - ln -sf i18n/"{{.LANG}}"/conf.yaml ./

  deps:
    cmds:
      - go get ./internal/...

  golanci-lint:
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | bash -s -- -b .bin v{{.GOLANGCI_VERSION}}
      - mv .bin/golangci-lint .bin/golangci-lint-{{.GOLANGCI_VERSION}}
    generates:
      - .bin/golangci-lint-{{.GOLANGCI_VERSION}}
    status:
      - test -f .bin/golangci-lint-{{.GOLANGCI_VERSION}}

  lint:
    deps: [golanci-lint]
    cmds:
        - .bin/golangci-lint-{{.GOLANGCI_VERSION}} run --skip-dirs "i18n|custom"

  lint-reports:
    generates:
      - out/lint.xml

  build-lin:
    deps: [deps]
    cmds:
      - GOOS=linux GOARCH=amd64 go out -o out/firemage .
    sources:
      - ./**/*.go
    generates:
      - out/firemage

  build-osx:
    deps: [deps]
    cmds:
      - GOOS=darwin GOARCH=amd64 go out -o out/firemage .
    sources:
      - ./**/*.go
    generates:
      - out/firemage.exe

  build-win:
    deps: [deps]
    cmds:
      - GOOS=windows GOARCH=amd64 go out -o out/firemage.exe .
    sources:
      - ./**/*.go
    generates:
      - out/firemage.exe

  build:
    deps: [deps]
    cmds:
      - cmd: go build -o out/firemage .
        platforms: [linux, darwin]
        generates:
          - out/firemage
      - cmd: go build -o out/firemage.exe .
        platforms: [windows]
        generates:
          - out/firemage.exe

  debug:
    deps: [deps]
    cmds:
      - go run . -k {{.KEY}} -c {{.CONF}} {{.VERBOSE}} {{.CLI_ARGS}}

  install:
    deps: [deps]
    cmds:
      - cmd: go install .

  run:
    cmds:
      - firemage -k {{.KEY}} -c {{.CONF}} {{.VERBOSE}} {{.CLI_ARGS}}

  test:
    deps: [deps]
    cmds:
      - echo "testing ..."
      - go test -coverprofile coverage.out ./internal/... -v -p 1

  cover:
    cmds:
      - go tool cover -o cov.html -html=coverage.out; sed -i 's/black/whitesmoke/g' cov.html; chromium cov.html
